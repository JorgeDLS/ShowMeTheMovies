allprojects {
  repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
  }
}

ext {
//Android
  androidBuildToolsVersion = "29.0.0"
  androidMinSdkVersion = 23
  androidTargetSdkVersion = 29
  androidCompileSdkVersion = 29
  jvmCompat = JavaVersion.VERSION_1_8

  //Libraries
  appCompatVersion = '1.1.0-rc01'
  materialVersion = '1.1.0-alpha08'
  constraintLayoutVersion = '1.1.3'
  glideVersion = '4.9.0'
  retrofitVersion = '2.5.0'
  gsonVersion = '2.8.1'
  okHttpVersion = '3.14.2'
  rxJavaVersion = '2.2.8'
  rxKotlinVersion = '2.1.0'
  rxAndroidVersion = '2.1.1'
  javaxAnnotationVersion = '1.0'
  javaxInjectVersion = '1'
  androidAnnotationsVersion = '21.0.3'
  daggerVersion = '2.23.1'
  archVersion = '2.1.0'
  roomVersion = '2.2.0-rc01'

  //Testing
  jUnitVersion = '4.12'
  testRunnerVersion = '1.1.0'
  espressoVersion = '3.2.0'
  assertJVersion = '3.8.0'
  mockitoKotlinVersion = '2.1.0'
  mockitoAndroidVersion = '3.0.0'
  androidSupportRunnerVersion = '1.0.0'
  androidSupportRulesVersion = '1.0.0'
  runnerVersion = '1.1.0-beta02'
  robolectricVersion = '3.4.2'

  domainDependencies = [
      dagger   : "com.google.dagger:dagger:${daggerVersion}",
      kotlin   : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
      rxAndroid: "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
  ]

  domainTestDependencies = [
      junit  : "junit:junit:${jUnitVersion}",
      mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
      assertj: "org.assertj:assertj-core:${assertJVersion}"
  ]

  dataDependencies = [
      dagger           : "com.google.dagger:dagger:${daggerVersion}",
      rxJava           : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
      retrofit         : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
      retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
      retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
      okHttp           : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
      okHttpLoggingInt : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
      roomRuntime      : "android.arch.persistence.room:runtime:${roomVersion}",
      roomCompiler     : "android.arch.persistence.room:compiler:${roomVersion}"
  ]

  dataTestDependencies = [
      junit      : "junit:junit:${jUnitVersion}",
      kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
      assertj    : "org.assertj:assertj-core:${assertJVersion}",
      mockito    : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
      robolectric: "org.robolectric:robolectric:${robolectricVersion}",
      roomTesting: "android.arch.persistence.room:testing:${roomVersion}",
      archTesting: "android.arch.core:core-testing:${archVersion}"
  ]

  appDependencies = [
      daggerCompiler  : "com.google.dagger:dagger-compiler:${daggerVersion}",
      dagger          : "com.google.dagger:dagger:${daggerVersion}",
      daggerProcessor : "com.google.dagger:dagger-android-processor:${daggerVersion}",
      daggerSupport   : "com.google.dagger:dagger-android-support:${daggerVersion}",
      appCompat       : "androidx.appcompat:appcompat:${appCompatVersion}",
      material        : "com.google.android.material:material:${materialVersion}",
      coreKtx         : "androidx.core:core-ktx:${appCompatVersion}",
      lifeCycle       : "androidx.lifecycle:lifecycle-extensions:${archVersion}",
      constraintLayout: "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}",
      glide           : "com.github.bumptech.glide:glide:${glideVersion}",
      rxAndroid       : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
      archRuntime     : "android.arch.lifecycle:runtime:${archVersion}",
      archCompiler    : "android.arch.lifecycle:common-java8:${archVersion}",
      roomRxJava      : "android.arch.persistence.room:rxjava2:${roomVersion}"
  ]

  appTestDependencies = [
      junit          : "junit:junit:${jUnitVersion}",
      testRunner     : "androidx.test.ext:junit:${testRunnerVersion}",
      espresso       : "androidx.test.espresso:espresso-core:${espressoVersion}",
      mockito        : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
      archTesting    : "androidx.arch.core:core-testing:${archVersion}",
      kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
      assertj        : "org.assertj:assertj-core:${assertJVersion}",
      mockitoAndroid : "org.mockito:mockito-android:${mockitoAndroidVersion}",
      espressoCore   : "androidx.test.espresso:espresso-core:${espressoVersion}",
      espressoIntents: "androidx.test.espresso:espresso-intents:${espressoVersion}",
      espressoContrib: "androidx.test.espresso:espresso-contrib:${espressoVersion}",
      androidRunner  : "androidx.test:runner:${runnerVersion}",
      androidRules   : "androidx.test:rules:${runnerVersion}"
  ]
}